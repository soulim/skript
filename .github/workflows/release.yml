name: Release a new version
on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  release:
    name: Upload a release asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare a build
        id: prepare-build
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          version=${GITHUB_REF#refs/tags/v}
          tar -cvzf skript_${version}.tar.gz bin/ README.md LICENSE
          echo "::set-output name=version::${version}"
      - name: Create a release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.prepare-build.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload a release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./skript_${{ steps.prepare-build.outputs.version }}.tar.gz
          asset_name: skript_${{ steps.prepare-build.outputs.version }}.tar.gz
          asset_content_type: application/gzip
      - name: Bump Homebrew formula
        uses: mislav/bump-homebrew-formula-action@v1
        if: "!contains(github.ref, '-')" # skip prereleases
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
        with:
          homebrew-tap: soulim/homebrew-tools
          formula-name: skript
          download-url: ${{ steps.upload-release-asset.outputs.browser_download_url }}
          commit-message: Release {{formulaName}} v{{version}}
